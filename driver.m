input_layer_size = 22;
hidden_layer_size = 300;
hidden_layer_size_2 = 400;
num_labels = 88;
m = size(xfinal,1);
options = optimset('MaxIter', 1000);
lambda = 3;
[xfinal,m,sd] = featureNormalize(xfinal);
initial_Theta1 = randInitializeWeights(input_layer_size, hidden_layer_size);
initial_Theta2 = randInitializeWeights(hidden_layer_size, hidden_layer_size_2);
initial_Theta3 = randInitializeWeights(hidden_layer_size_2, num_labels);
initial_nn_params = [initial_Theta1(:) ; initial_Theta2(:) ; initial_Theta3(:)];
costFunction = @(p) nnCostFunction(p, input_layer_size, hidden_layer_size, hidden_layer_size_2, num_labels, xfinal, yfinal, lambda);
[nn_params, cost] = fminunc(costFunction, initial_nn_params, options);
Theta1 = reshape(nn_params(1:hidden_layer_size * (input_layer_size + 1)),hidden_layer_size, (input_layer_size + 1));
Theta2 = reshape(nn_params(6901:127300),hidden_layer_size_2, (hidden_layer_size + 1));
Theta3 = reshape(nn_params(127301:end),num_labels, (hidden_layer_size_2 + 1));       
pred = predictVal(Theta1, Theta2, Theta3, predx);
fprintf('\nTraining Set Accuracy: %f\n', mean(double(pred == y)) * 100);